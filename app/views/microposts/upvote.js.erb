var $old_vote_value = $("#micropost-<%= @micropost.id %>-vote-value");
var old_vote_value = $("#micropost-<%= @micropost.id %>-vote-value").html();

// Show vote value before value change animation, to make sure wrapper of old/new contains both inside content box.
if (old_vote_value == 0) {
  $old_vote_value.css("visibility", "visible");
}

$("#micropost-<%= @micropost.id %>-vote-container").html("<%= escape_javascript(
  render partial: 'shared/micropost/info_bar/unvote_form', locals: { micropost: @micropost }
) %>");

// Disable all stat container buttons
$( ".stat-container form > button" ).attr("disabled", true);

// Re-enable all stat container buttons
setTimeout(function () {
  $( ".stat-container form > button" ).attr("disabled", false);
}, 1000);

var $vote_value = $("#micropost-<%= @micropost.id %>-vote-value");

var $vote_value_wrapper = $("#micropost-<%= @micropost.id %>-vote-value-wrapper");
var $vote_value_clone = $vote_value.clone().addClass("pos-abs");

$vote_value_clone.html(old_vote_value)
$vote_value_clone.prependTo($vote_value_wrapper);
$vote_value.html("<%= @micropost.get_upvotes.size %>").removeClass("tran-03s").addClass("move-down tran-0s");

setTimeout(function () {
  $vote_value_clone.addClass( "move-up" );
  $vote_value.removeClass("move-down tran-0s").addClass("tran-03s");
}, 100); // Use delay to not override transform, and cause no transition

setTimeout(function () {
  $vote_value_clone.remove();
}, 500);
