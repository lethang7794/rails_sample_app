<%
  # Controllers that use this partial must supply the following variables:
  # user
  # comment
  # nested_children or page
  # show_all

  thread = comment.thread
  nested_children ||= begin
    children = thread.paginated_comments(page, comment.id, show_all)
    thread.nested_comments_for(user, children, show_all)
  end

  creator = comment.creator
  link = Commontator.commontator_link(creator, main_app)
  name = Commontator.commontator_name(creator) || ''
  username = creator.username
%>

<div class="comment-container">
  <div class="my-flex-container flex-row comment-flex-container">
    <div id="commontator-comment-<%= comment.id %>-avatar" class="avatar">
      <div class="comment-avatar rounded-circle overflow-hidden dimmer-wrapper loading-shimmer">
        <%= link_to link do %>
          <%= Commontator.commontator_avatar(creator, self) %>
          <div class="dimmer"></div>
        <% end %>
      </div>
      <% if nested_children.any? %>
        <div class="flex-center-x" style="height: 100%">
          <div id="commontator-comment-<%= comment.id %>-threadline-container" class="threadline-container threadline-container-parent">
            <div class="threadline"></div>
          </div>
        </div>
      <% else %>
        <div class="flex-center-x" style="height: 100%">
          <div id="commontator-comment-<%= comment.id %>-threadline-container-no-child" class="threadline-container threadline-container-parent no-child commontator-comment-<%= comment.id %>-threadline-container">
            <div class="threadline"></div>
          </div>
        </div>
      <% end %>
    </div>
    <div class="my-flex-container flex-column micropost-main" style="width: 100%;">

      <div id="commontator-comment-<%= comment.id %>-bubble" class="bubble">
        <div id="commontator-comment-<%= comment.id %>-section-top" class="section top">
          <span id="commontator-comment-<%= comment.id %>-author" class="author">
            <div class="flex flex-row" style="min-height: 30px;">
              <div class="flex flex-row flex-wrap flex-center-y"> <%# FLEX - BEGIN %>
                <%# USER - USERNAME - BEGIN %>
                <% if link.blank? %>
                  name
                <% else %>
                  <%= link_to link do %>
                    <div>
                      <span class="user"><%= name %></span>
                      <span class="username">@<%= username %></span>
                    </div>
                  <% end %>
                <% end %>
                <%# USER - USERNAME - END %>
                <%# timestamp - BEGIN %>
                <div>
                  <% if comment.is_modified? %>
                    <span id="commontator-comment-<%= comment.id %>-updated-timestamp" class="timestamp">
                      <%# comment.updated_timestamp %>
                      ·
                      <%= time_ago_in_words(comment.updated_at) %>
                    </span>
                  <% else %>
                    <span id="commontator-comment-<%= comment.id %>-created-timestamp" class="timestamp">
                      <%# comment.created_timestamp %>
                      ·
                      <%= time_ago_in_words(comment.created_at) %>
                    </span>
                  <% end %>
                </div>
                <%# timestamp - END %>

              </div> <%# FLEX - END %>
            </div>
          </span>

          <span id="commontator-comment-<%= comment.id %>-actions" class="actions">
            <%=
              link_to(
                t('commontator.comment.actions.edit'),
                commontator.edit_comment_path(comment),
                id: "commontator-comment-#{comment.id}-edit",
                class: 'edit',
                remote: true
              ) if comment.can_be_edited_by?(user)
            %>

            <% if comment.can_be_deleted_by?(user) %>
              <% is_deleted = comment.is_deleted? %>
              <% del_string = is_deleted ? 'undelete' : 'delete' %>
              <%= link_to t("commontator.comment.actions.#{del_string}"),
                          commontator.polymorphic_path([del_string, comment]),
                          data: is_deleted ? {} : { confirm: t('commontator.comment.actions.confirm_delete') },
                          method: :put,
                          id: "commontator-comment-#{comment.id}-#{del_string}",
                          class: del_string,
                          remote: true %>
            <% end %>
          </span>
        </div>

        <div id="commontator-comment-<%= comment.id %>-section-middle" class="section middle">
          <span id="commontator-comment-<%= comment.id %>-votes" class="votes">
            <%= render partial: 'commontator/comments/votes', locals: { comment: comment, user: user } %>
          </span>

          <div id="commontator-comment-<%= comment.id %>-body" class="body">
            <%= render partial: 'commontator/comments/body', locals: { comment: comment } %>
          </div>
        </div>
      </div>

      <div id="commontator-comment-<%= comment.id %>-section-bottom" class="section bottom" style="display: flex;">
        <% unless comment.is_deleted? %>
          <span id="commontator-comment-<%= comment.id %>-reply-link" class="reply">
            <% if thread.config.comment_reply_style != :n && !thread.is_closed? %>
              <%= link_to commontator.new_thread_comment_path(thread, comment: { parent_id: comment.id }), remote: true do %>
                <div class="reply-indicator"></div>
                <%= t('commontator.comment.actions.reply') %>
              <% end %>
            <% end %>
          </span>
        <% end %>
      </div>
    </div>
  </div>
</div>

<div class="flex flex-row">

  <% if nested_children.any? %>
    <div class="flex-center-x" style="min-width: 50px; height: auto">
      <div id="commontator-comment-<%= comment.id %>-threadline-container-children" class="threadline-container threadline-container-children">
        <div class="threadline"></div>
      </div>
    </div>
  <% else %>
    <div class="flex-center-x" style="min-width: 50px; height: auto">
      <div id="commontator-comment-<%= comment.id %>-threadline-container-children" class="threadline-container threadline-container-children">
        <div class="threadline"></div>
      </div>
    </div>
  <% end %>


  <div id="commontator-comment-<%= comment.id %>-children" class="children flex-grow-1">
    <% if thread.config.comment_order == :l %>
      <div id="commontator-comment-<%= comment.id %>-reply" class="reply"></div>
    <% end %>

    <%= render partial: 'commontator/comments/list',
               locals: { user: user, nested_comments: nested_children } %>

    <% if thread.config.comment_order != :l %>
      <div id="commontator-comment-<%= comment.id %>-reply" class="reply"></div>
    <% end %>
  </div>
</div>

<div id="commontator-comment-<%= comment.id %>-pagination" class="pagination">
  <div id="commontator-comment-<%= comment.id %>-will-paginate" class="will-paginate">
    <%= will_paginate nested_children,
                      renderer: Commontator::LinkRenderer,
                      name: t('commontator.comment.status.reply_pages'),
                      remote: true,
                      params: { controller: 'commontator/comments',
                                action: 'show',
                                id: comment.id } %>
  </div>
</div>

<script type="text/javascript">
  <%# THREADLINE HOVER HANDLER - BEGIN %>
  $('#commontator-comment-<%= comment.id %>-threadline-container').hover(function() {
    $('#commontator-comment-<%= comment.id %>-threadline-container-children').addClass('threadline-hover');
  }, function() {
    $('#commontator-comment-<%= comment.id %>-threadline-container-children').removeClass('threadline-hover');
  });

  $('#commontator-comment-<%= comment.id %>-threadline-container-children').hover(function() {
    $('#commontator-comment-<%= comment.id %>-threadline-container').addClass('threadline-hover');
  }, function() {
    $('#commontator-comment-<%= comment.id %>-threadline-container').removeClass('threadline-hover');
  });
  <%# THREADLINE HOVER HANDLER - END %>

  <%# THREADLINE CLICK HANDLER - BEGIN %>
  $('#commontator-comment-<%= comment.id %>-threadline-container, #commontator-comment-<%= comment.id %>-threadline-container-children').click(function() {
    $('#commontator-comment-<%= comment.id %>-threadline-container').hide();
    $('#commontator-comment-<%= comment.id %>-actions').hide();
    $('#commontator-comment-<%= comment.id %>-section-middle').hide();
    $('#commontator-comment-<%= comment.id %>-reply-link').hide();
    $('#commontator-comment-<%= comment.id %>-pagination').hide();

    $('#commontator-comment-<%= comment.id %>-children').hide();

    $('#commontator-comment-<%= comment.id %> .bubble').addClass('opacity-05 hover-opacity-1');

    // alert( "Handler for .click() called." );
  });

  $('#commontator-comment-<%= comment.id %>-threadline-container-no-child').click(function() {
    $('.commontator-comment-<%= comment.id %>-threadline-container').hide();
    $('#commontator-comment-<%= comment.id %>-actions').hide();
    $('#commontator-comment-<%= comment.id %>-section-middle').hide();
    $('#commontator-comment-<%= comment.id %>-reply-link').hide();
    $('#commontator-comment-<%= comment.id %>-pagination').hide();

    $('#commontator-comment-<%= comment.id %> .bubble').addClass('opacity-05 hover-opacity-1');

    // alert( "Handler for .click() called." );
  });



  $( "#target" ).click(function() {
  alert( "Handler for .click() called." );
  });
  <%# THREADLINE CLICK HANDLER - END %>
</script>
